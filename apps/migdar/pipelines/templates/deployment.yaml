{{ if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipelines
spec:
  selector:
    matchLabels:
      app: pipelines
  replicas: 1
  strategy:
    type: Recreate
  {{ if .Values.enableAntiAffinity }}
  affinity:
    # ensure pipelines won't be on the same node as elasticsearch
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - elasticsearch
        topologyKey: "kubernetes.io/hostname"
  {{ end }}
  template:
    metadata:
      labels:
        app: pipelines
      annotations:
        checksum/nginx-config: {{ include (print $.Template.BasePath "/nginx-configmap.yaml") . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: pipelines
        image: {{ .Values.image | default "hasadna/migdar-data-pipelines:latest" | quote }}
        args: ['server']
        ports:
        - containerPort: 5000
        resources: {{ .Values.resources }}
        env:
        - name: DPP_REDIS_HOST
          value: 127.0.0.1
        - name: DATAFLOWS_DB_ENGINE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dbSecretName | quote }}
              key: DATAFLOWS_DB_ENGINE
        - name: DATAFLOWS_ELASTICSEARCH
          value: elasticsearch:9200
        - name: MIGDAR_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.migdarSecretName | quote }}
              key: MIGDAR_USERNAME
        - name: MIGDAR_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.migdarSecretName | quote }}
              key: MIGDAR_PASSWORD
        volumeMounts:
        - mountPath: /pipelines/data
          name: data
          subPath: data
        - mountPath: /var/redis
          name: data
          subPath: redis
        - name: gdrive
          mountPath: /migdar-gdrive
          readOnly: true
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "exit $(test $(date +%H) -eq 3 && echo 1 || echo 0)"
          failureThreshold: 1
          initialDelaySeconds: 3600
          periodSeconds: 60
      - name: nginx
        image: nginx:alpine
        command:
        - sh
        - "-c"
        - |
          echo "HELLO WORLD!" &&\
          chown -R nginx.nginx /pipelines/ &&\
          chmod -R 777 /pipelines/ &&\
          echo "NGINX STARTING" &&\
          nginx -g "daemon off;"
        ports:
        - containerPort: 80
        resources: {"requests": {"cpu": "30m", "memory": "150Mi"}, "limits": {"memory": "300Mi"}}
        volumeMounts:
        - name: pipelines-nginx-conf
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - mountPath: /pipelines/data
          name: data
          subPath: data
      volumes:
      - name: data
      {{ if .Values.gcePersistentDiskName }}
        persistentVolumeClaim:
          claimName: {{ .Release.Namespace }}-{{ .Values.gcePersistentDiskName }}-gcepd
      {{ else if .Values.nfsServer }}
        nfs:
          server: {{ .Values.nfsServer | quote }}
          path: {{ .Values.nfsPath | quote }}
      {{ else }}
        {{ .Values.global.persistentDataVolume.type }}: {
          {{ if eq .Values.global.persistentDataVolume.type "hostPath" }}
          "path": "{{ .Values.global.persistentDataVolume.basePath }}/pipelines",
          "type": "DirectoryOrCreate"
          {{ end }}
        }
      {{ end }}
      - name: pipelines-nginx-conf
        configMap:
          name: pipelines-nginx-conf
      - name: gdrive
        secret:
          secretName: migdar-drive
{{ end }}
